Writing Plug-in Methods with Delegates
A delegate variable is assigned a method at runtime. This is useful for writing plugin
methods. In this example, we have a utility method named Transform that
applies a transform to each element in an integer array. The Transform method has
a delegate parameter, for specifying a plug-in transform.
public delegate int Transformer (int x);

copyrite w/permit//oreilly https://www.oreilly.com/catalog/errata.csp?isbn=9781491927069
class Util
{
public static void Transform (int[] values, Transformer t)
{
for (int i = 0; i < values.Length; i++)
values[i] = t (values[i]);
}
}
class Test

{
static void Main()
{
int[] values = { 1, 2, 3 };
Util.Transform (values, Square); // Hook in the Square method
foreach (int i in values)
Console.Write (i + " "); // 1 4 9
}
static int Square (int x) => x * x;
}
